{"ast":null,"code":"import { isValidElement } from 'react';\nimport { cloneWithRef } from '../utils/cloneWithRef';\n\nfunction throwIfCompositeComponentElement(element) {\n  // Custom components can no longer be wrapped directly in React DnD 2.0\n  // so that we don't need to depend on findDOMNode() from react-dom.\n  if (typeof element.type === 'string') {\n    return;\n  }\n\n  var displayName = element.type.displayName || element.type.name || 'the component';\n  throw new Error('Only native element nodes can now be passed to React DnD connectors.' + \"You can either wrap \".concat(displayName, \" into a <div>, or turn it into a \") + 'drag source or a drop target itself.');\n}\n\nfunction wrapHookToRecognizeElement(hook) {\n  return function () {\n    var elementOrNode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null; // When passed a node, call the hook straight away.\n\n    if (!isValidElement(elementOrNode)) {\n      var node = elementOrNode;\n      hook(node, options); // return the node so it can be chained (e.g. when within callback refs\n      // <div ref={node => connectDragSource(connectDropTarget(node))}/>\n\n      return node;\n    } // If passed a ReactElement, clone it and attach this function as a ref.\n    // This helps us achieve a neat API where user doesn't even know that refs\n    // are being used under the hood.\n\n\n    var element = elementOrNode;\n    throwIfCompositeComponentElement(element); // When no options are passed, use the hook directly\n\n    var ref = options ? function (node) {\n      return hook(node, options);\n    } : hook;\n    return cloneWithRef(element, ref);\n  };\n}\n\nexport function wrapConnectorHooks(hooks) {\n  var wrappedHooks = {};\n  Object.keys(hooks).forEach(function (key) {\n    var hook = hooks[key]; // ref objects should be passed straight through without wrapping\n\n    if (key.endsWith('Ref')) {\n      wrappedHooks[key] = hooks[key];\n    } else {\n      var wrappedHook = wrapHookToRecognizeElement(hook);\n\n      wrappedHooks[key] = function () {\n        return wrappedHook;\n      };\n    }\n  });\n  return wrappedHooks;\n}","map":{"version":3,"names":["isValidElement","cloneWithRef","throwIfCompositeComponentElement","element","type","displayName","name","Error","concat","wrapHookToRecognizeElement","hook","elementOrNode","arguments","length","undefined","options","node","ref","wrapConnectorHooks","hooks","wrappedHooks","Object","keys","forEach","key","endsWith","wrappedHook"],"sources":["D:/RamS_Sych/Trello_Clone_107/node_modules/react-dnd/dist/esm/common/wrapConnectorHooks.js"],"sourcesContent":["import { isValidElement } from 'react';\nimport { cloneWithRef } from '../utils/cloneWithRef';\n\nfunction throwIfCompositeComponentElement(element) {\n  // Custom components can no longer be wrapped directly in React DnD 2.0\n  // so that we don't need to depend on findDOMNode() from react-dom.\n  if (typeof element.type === 'string') {\n    return;\n  }\n\n  var displayName = element.type.displayName || element.type.name || 'the component';\n  throw new Error('Only native element nodes can now be passed to React DnD connectors.' + \"You can either wrap \".concat(displayName, \" into a <div>, or turn it into a \") + 'drag source or a drop target itself.');\n}\n\nfunction wrapHookToRecognizeElement(hook) {\n  return function () {\n    var elementOrNode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    // When passed a node, call the hook straight away.\n    if (!isValidElement(elementOrNode)) {\n      var node = elementOrNode;\n      hook(node, options); // return the node so it can be chained (e.g. when within callback refs\n      // <div ref={node => connectDragSource(connectDropTarget(node))}/>\n\n      return node;\n    } // If passed a ReactElement, clone it and attach this function as a ref.\n    // This helps us achieve a neat API where user doesn't even know that refs\n    // are being used under the hood.\n\n\n    var element = elementOrNode;\n    throwIfCompositeComponentElement(element); // When no options are passed, use the hook directly\n\n    var ref = options ? function (node) {\n      return hook(node, options);\n    } : hook;\n    return cloneWithRef(element, ref);\n  };\n}\n\nexport function wrapConnectorHooks(hooks) {\n  var wrappedHooks = {};\n  Object.keys(hooks).forEach(function (key) {\n    var hook = hooks[key]; // ref objects should be passed straight through without wrapping\n\n    if (key.endsWith('Ref')) {\n      wrappedHooks[key] = hooks[key];\n    } else {\n      var wrappedHook = wrapHookToRecognizeElement(hook);\n\n      wrappedHooks[key] = function () {\n        return wrappedHook;\n      };\n    }\n  });\n  return wrappedHooks;\n}"],"mappings":"AAAA,SAASA,cAAT,QAA+B,OAA/B;AACA,SAASC,YAAT,QAA6B,uBAA7B;;AAEA,SAASC,gCAAT,CAA0CC,OAA1C,EAAmD;EACjD;EACA;EACA,IAAI,OAAOA,OAAO,CAACC,IAAf,KAAwB,QAA5B,EAAsC;IACpC;EACD;;EAED,IAAIC,WAAW,GAAGF,OAAO,CAACC,IAAR,CAAaC,WAAb,IAA4BF,OAAO,CAACC,IAAR,CAAaE,IAAzC,IAAiD,eAAnE;EACA,MAAM,IAAIC,KAAJ,CAAU,yEAAyE,uBAAuBC,MAAvB,CAA8BH,WAA9B,EAA2C,mCAA3C,CAAzE,GAA2J,sCAArK,CAAN;AACD;;AAED,SAASI,0BAAT,CAAoCC,IAApC,EAA0C;EACxC,OAAO,YAAY;IACjB,IAAIC,aAAa,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAAxF;IACA,IAAIG,OAAO,GAAGH,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAAlF,CAFiB,CAIjB;;IACA,IAAI,CAACZ,cAAc,CAACW,aAAD,CAAnB,EAAoC;MAClC,IAAIK,IAAI,GAAGL,aAAX;MACAD,IAAI,CAACM,IAAD,EAAOD,OAAP,CAAJ,CAFkC,CAEb;MACrB;;MAEA,OAAOC,IAAP;IACD,CAXgB,CAWf;IACF;IACA;;;IAGA,IAAIb,OAAO,GAAGQ,aAAd;IACAT,gCAAgC,CAACC,OAAD,CAAhC,CAjBiB,CAiB0B;;IAE3C,IAAIc,GAAG,GAAGF,OAAO,GAAG,UAAUC,IAAV,EAAgB;MAClC,OAAON,IAAI,CAACM,IAAD,EAAOD,OAAP,CAAX;IACD,CAFgB,GAEbL,IAFJ;IAGA,OAAOT,YAAY,CAACE,OAAD,EAAUc,GAAV,CAAnB;EACD,CAvBD;AAwBD;;AAED,OAAO,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;EACxC,IAAIC,YAAY,GAAG,EAAnB;EACAC,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,OAAnB,CAA2B,UAAUC,GAAV,EAAe;IACxC,IAAId,IAAI,GAAGS,KAAK,CAACK,GAAD,CAAhB,CADwC,CACjB;;IAEvB,IAAIA,GAAG,CAACC,QAAJ,CAAa,KAAb,CAAJ,EAAyB;MACvBL,YAAY,CAACI,GAAD,CAAZ,GAAoBL,KAAK,CAACK,GAAD,CAAzB;IACD,CAFD,MAEO;MACL,IAAIE,WAAW,GAAGjB,0BAA0B,CAACC,IAAD,CAA5C;;MAEAU,YAAY,CAACI,GAAD,CAAZ,GAAoB,YAAY;QAC9B,OAAOE,WAAP;MACD,CAFD;IAGD;EACF,CAZD;EAaA,OAAON,YAAP;AACD"},"metadata":{},"sourceType":"module"}