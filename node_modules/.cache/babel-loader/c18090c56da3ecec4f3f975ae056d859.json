{"ast":null,"code":"import { cloneElement } from 'react';\nimport { invariant } from '@react-dnd/invariant';\n\nfunction setRef(ref, node) {\n  if (typeof ref === 'function') {\n    ref(node);\n  } else {\n    ref.current = node;\n  }\n}\n\nexport function cloneWithRef(element, newRef) {\n  var previousRef = element.ref;\n  invariant(typeof previousRef !== 'string', 'Cannot connect React DnD to an element with an existing string ref. ' + 'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' + 'Read more: https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute');\n\n  if (!previousRef) {\n    // When there is no ref on the element, use the new ref directly\n    return cloneElement(element, {\n      ref: newRef\n    });\n  } else {\n    return cloneElement(element, {\n      ref: function ref(node) {\n        setRef(previousRef, node);\n        setRef(newRef, node);\n      }\n    });\n  }\n}","map":{"version":3,"names":["cloneElement","invariant","setRef","ref","node","current","cloneWithRef","element","newRef","previousRef"],"sources":["D:/RamS_Sych/Trello_Clone_107/node_modules/react-dnd/dist/esm/utils/cloneWithRef.js"],"sourcesContent":["import { cloneElement } from 'react';\nimport { invariant } from '@react-dnd/invariant';\n\nfunction setRef(ref, node) {\n  if (typeof ref === 'function') {\n    ref(node);\n  } else {\n    ref.current = node;\n  }\n}\n\nexport function cloneWithRef(element, newRef) {\n  var previousRef = element.ref;\n  invariant(typeof previousRef !== 'string', 'Cannot connect React DnD to an element with an existing string ref. ' + 'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' + 'Read more: https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute');\n\n  if (!previousRef) {\n    // When there is no ref on the element, use the new ref directly\n    return cloneElement(element, {\n      ref: newRef\n    });\n  } else {\n    return cloneElement(element, {\n      ref: function ref(node) {\n        setRef(previousRef, node);\n        setRef(newRef, node);\n      }\n    });\n  }\n}"],"mappings":"AAAA,SAASA,YAAT,QAA6B,OAA7B;AACA,SAASC,SAAT,QAA0B,sBAA1B;;AAEA,SAASC,MAAT,CAAgBC,GAAhB,EAAqBC,IAArB,EAA2B;EACzB,IAAI,OAAOD,GAAP,KAAe,UAAnB,EAA+B;IAC7BA,GAAG,CAACC,IAAD,CAAH;EACD,CAFD,MAEO;IACLD,GAAG,CAACE,OAAJ,GAAcD,IAAd;EACD;AACF;;AAED,OAAO,SAASE,YAAT,CAAsBC,OAAtB,EAA+BC,MAA/B,EAAuC;EAC5C,IAAIC,WAAW,GAAGF,OAAO,CAACJ,GAA1B;EACAF,SAAS,CAAC,OAAOQ,WAAP,KAAuB,QAAxB,EAAkC,yEAAyE,sFAAzE,GAAkK,kGAApM,CAAT;;EAEA,IAAI,CAACA,WAAL,EAAkB;IAChB;IACA,OAAOT,YAAY,CAACO,OAAD,EAAU;MAC3BJ,GAAG,EAAEK;IADsB,CAAV,CAAnB;EAGD,CALD,MAKO;IACL,OAAOR,YAAY,CAACO,OAAD,EAAU;MAC3BJ,GAAG,EAAE,SAASA,GAAT,CAAaC,IAAb,EAAmB;QACtBF,MAAM,CAACO,WAAD,EAAcL,IAAd,CAAN;QACAF,MAAM,CAACM,MAAD,EAASJ,IAAT,CAAN;MACD;IAJ0B,CAAV,CAAnB;EAMD;AACF"},"metadata":{},"sourceType":"module"}