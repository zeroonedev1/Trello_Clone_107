{"ast":null,"code":"var _jsxFileName = \"D:\\\\RamS_Sych\\\\Trello_Clone_107\\\\src\\\\CardFunc.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { useDrop } from 'react-dnd';\nimport { useAppState } from './AppStateContext';\n// import { CardContainer } from './styles'\nimport { useItemDrag } from './useItemDrag';\nimport CardActions from '@mui/material/CardActions';\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CardFunc = _ref => {\n  _s();\n\n  let {\n    text,\n    desc,\n    index,\n    id,\n    taskId,\n    columnId\n  } = _ref;\n  const {\n    dispatch\n  } = useAppState();\n  const ref = useRef(null);\n  const {\n    drag\n  } = useItemDrag({\n    type: \"CARD\",\n    id,\n    index,\n    text,\n    columnId\n  });\n  const [, drop] = useDrop({\n    accept: \"CARD\",\n\n    hover(item) {\n      if (item.id === id) {\n        return;\n      }\n\n      const targetColumn = columnId;\n      item.index = index;\n      item.columnId = targetColumn;\n    }\n\n  });\n  drag(drop(ref));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      mb: 4,\n      p: 1\n    },\n    children: [text, /*#__PURE__*/_jsxDEV(\"p\", {\n      children: desc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        onClick: () => dispatch({\n          type: \"DELETE_TASK\",\n          payload: {\n            taskId: taskId,\n            columnId: columnId\n          }\n        }),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CardFunc, \"SWXWLRLiQE9VWfFK1dadAqs0R7g=\", false, function () {\n  return [useAppState, useItemDrag, useDrop];\n});\n\n_c = CardFunc;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardFunc\");","map":{"version":3,"names":["React","useRef","useDrop","useAppState","useItemDrag","CardActions","Button","Card","CardFunc","text","desc","index","id","taskId","columnId","dispatch","ref","drag","type","drop","accept","hover","item","targetColumn","mb","p","payload"],"sources":["D:/RamS_Sych/Trello_Clone_107/src/CardFunc.tsx"],"sourcesContent":["import React, { useRef } from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport { useAppState } from './AppStateContext';\r\nimport { CardDragItem } from './DragItem';\r\n// import { CardContainer } from './styles'\r\nimport { useItemDrag } from './useItemDrag';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Button from '@mui/material/Button';\r\nimport Card from '@mui/material/Card';\r\n\r\n\r\ninterface CardProps {\r\n  text: string,\r\n  index: number,\r\n  id: string,\r\n  columnId: string,\r\n  desc:string,\r\n  taskId:string\r\n}\r\n\r\nexport const CardFunc = ({ text,desc, index, id,taskId ,columnId }: CardProps) => {\r\n  const { dispatch } = useAppState();\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const { drag } = useItemDrag({ type: \"CARD\", id, index, text,columnId });\r\n  const [, drop] = useDrop({\r\n    accept: \"CARD\",\r\n    hover(item: CardDragItem) {\r\n      if (item.id === id) {\r\n        return;\r\n      }\r\n      const targetColumn = columnId\r\n   \r\n      item.index = index;\r\n      item.columnId = targetColumn;\r\n    }\r\n  })\r\n  drag(drop(ref));    \r\n  return <Card sx={{ mb: 4, p: 1 }} >\r\n    {text}\r\n    <p>{desc}</p>\r\n    <CardActions >\r\n      <Button size=\"small\" onClick={() =>dispatch({\r\n        type: \"DELETE_TASK\",\r\n        payload:{\r\n          taskId:taskId,\r\n          columnId:columnId\r\n        }\r\n      })}>Delete</Button>\r\n    </CardActions>\r\n  </Card>\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AAEA;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAYA,OAAO,MAAMC,QAAQ,GAAG,QAA0D;EAAA;;EAAA,IAAzD;IAAEC,IAAF;IAAOC,IAAP;IAAaC,KAAb;IAAoBC,EAApB;IAAuBC,MAAvB;IAA+BC;EAA/B,CAAyD;EAChF,MAAM;IAAEC;EAAF,IAAeZ,WAAW,EAAhC;EACA,MAAMa,GAAG,GAAGf,MAAM,CAAiB,IAAjB,CAAlB;EACA,MAAM;IAAEgB;EAAF,IAAWb,WAAW,CAAC;IAAEc,IAAI,EAAE,MAAR;IAAgBN,EAAhB;IAAoBD,KAApB;IAA2BF,IAA3B;IAAgCK;EAAhC,CAAD,CAA5B;EACA,MAAM,GAAGK,IAAH,IAAWjB,OAAO,CAAC;IACvBkB,MAAM,EAAE,MADe;;IAEvBC,KAAK,CAACC,IAAD,EAAqB;MACxB,IAAIA,IAAI,CAACV,EAAL,KAAYA,EAAhB,EAAoB;QAClB;MACD;;MACD,MAAMW,YAAY,GAAGT,QAArB;MAEAQ,IAAI,CAACX,KAAL,GAAaA,KAAb;MACAW,IAAI,CAACR,QAAL,GAAgBS,YAAhB;IACD;;EAVsB,CAAD,CAAxB;EAYAN,IAAI,CAACE,IAAI,CAACH,GAAD,CAAL,CAAJ;EACA,oBAAO,QAAC,IAAD;IAAM,EAAE,EAAE;MAAEQ,EAAE,EAAE,CAAN;MAASC,CAAC,EAAE;IAAZ,CAAV;IAAA,WACJhB,IADI,eAEL;MAAA,UAAIC;IAAJ;MAAA;MAAA;MAAA;IAAA,QAFK,eAGL,QAAC,WAAD;MAAA,uBACE,QAAC,MAAD;QAAQ,IAAI,EAAC,OAAb;QAAqB,OAAO,EAAE,MAAKK,QAAQ,CAAC;UAC1CG,IAAI,EAAE,aADoC;UAE1CQ,OAAO,EAAC;YACNb,MAAM,EAACA,MADD;YAENC,QAAQ,EAACA;UAFH;QAFkC,CAAD,CAA3C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAHK;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAaD,CA9BM;;GAAMN,Q;UACUL,W,EAEJC,W,EACAF,O;;;KAJNM,Q"},"metadata":{},"sourceType":"module"}